/***************************
******** Agenda ************
***************************/
Implement the HTTP PUT and PATCH verb
Put replaces an item
PATCH only changes a piece
Middleware
Implement the HTTP DELETE verb


/***************************
Implement the HTTP PUT
***************************/
//at the top put eslint, to disable for this file
/* eslint-disable no-param-reassign */


.put((req, res) => {
      const { book } = req;
      book.title = req.body.title;
      book.author = req.body.author;
      book.genre = req.body.genre;
      book.read = req.body.read;
      req.book.save((err) => {
        if (err) {
          return res.send(err);
        }
        return res.json(book);
      });
    })

/***************************
Implement the Middleware
***************************/
//the Middleware
bookRouter.use('/books/:bookId', (req, res, next) => {
    Book.findById(req.params.bookId, (err, book) => {
      if (err) {
        return res.send(err);
      }
      if (book) {
        req.book = book;
        return next();
      }
      return res.sendStatus(404);
    });
  });

  //using the Middleware

    bookRouter.route('/books/:bookId')
    .get((req, res) => res.json(req.book)) //use here, since the route with :bookId is requested
    .put((req, res) => {
      const { book } = req; //use here, since the route with :bookId is requested
      book.title = req.body.title;
      book.author = req.body.author;
      book.genre = req.body.genre;
      book.read = req.body.read;
      req.book.save((err) => {
        if (err) {
          return res.send(err);
        }
        return res.json(book);
      });
    })

    //Implement PATCH
.patch((req, res) => {
      const { book } = req;
      // eslint-disable-next-line no-underscore-dangle
      if (req.body._id) {
        // eslint-disable-next-line no-underscore-dangle
        delete req.body._id;
      }
      Object.entries(req.body).forEach((item) => {
        const key = item[0];
        const value = item[1];
        book[key] = value;
      });
      req.book.save((err) => {
        if (err) {
          return res.send(err);
        }
        return res.json(book);
      });
